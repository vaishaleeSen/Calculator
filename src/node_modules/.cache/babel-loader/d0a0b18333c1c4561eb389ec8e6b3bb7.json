{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaish\\\\Downloads\\\\react-calculator (2)\\\\react-calculator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react'; // Import necessary components and hooks\nimport './calc.css'; // Import CSS styles\nimport Navbar from './components/Navbar'; // Import Navbar component\nimport Buttons from './components/Button'; // Import Buttons component\nimport Result from './components/Result'; // Import Result component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [result, setResult] = useState('0'); // Use destructuring for useState\n\n  const handleButtonClick = value => {\n    // Define a single click handler for all buttons\n    switch (value) {\n      case '=':\n        setResult(prevResult => eval(prevResult).toString()); // Use functional state updates\n        break;\n      case 'c':\n        setResult('0');\n        break;\n      case '+/-':\n        setResult(prevResult => (parseFloat(prevResult) * -1).toString());\n        break;\n      case '%':\n        setResult(prevResult => (parseFloat(prevResult) / 100).toString());\n        break;\n      default:\n        setResult(prevResult => prevResult === '0' ? value : prevResult + value);\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myCalculator\",\n      children: [/*#__PURE__*/_jsxDEV(Result, {\n        result: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        Buttonclicked: handleButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VWnegitiY3uquXDaKEkEUT+oUVw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","Buttons","Result","jsxDEV","_jsxDEV","App","_s","result","setResult","handleButtonClick","value","prevResult","eval","toString","parseFloat","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Buttonclicked","_c","$RefreshReg$"],"sources":["C:/Users/vaish/Downloads/react-calculator (2)/react-calculator/src/App.js"],"sourcesContent":["import React, { useState } from 'react'; // Import necessary components and hooks\nimport './calc.css'; // Import CSS styles\nimport Navbar from './components/Navbar'; // Import Navbar component\nimport Buttons from './components/Button'; // Import Buttons component\nimport Result from './components/Result'; // Import Result component\n\nfunction App() {\n  const [result, setResult] = useState('0'); // Use destructuring for useState\n\n  const handleButtonClick = (value) => {\n    // Define a single click handler for all buttons\n    switch (value) {\n      case '=':\n        setResult((prevResult) => eval(prevResult).toString()); // Use functional state updates\n        break;\n      case 'c':\n        setResult('0');\n        break;\n      case '+/-':\n        setResult((prevResult) => (parseFloat(prevResult) * -1).toString());\n        break;\n      case '%':\n        setResult((prevResult) => (parseFloat(prevResult) / 100).toString());\n        break;\n      default:\n        setResult((prevResult) => (prevResult === '0' ? value : prevResult + value));\n        break;\n    }\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"myCalculator\">\n        <Result result={result} />\n        <Buttons Buttonclicked={handleButtonClick} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AACzC,OAAO,YAAY,CAAC,CAAC;AACrB,OAAOC,MAAM,MAAM,qBAAqB,CAAC,CAAC;AAC1C,OAAOC,OAAO,MAAM,qBAAqB,CAAC,CAAC;AAC3C,OAAOC,MAAM,MAAM,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;;EAE3C,MAAMU,iBAAiB,GAAIC,KAAK,IAAK;IACnC;IACA,QAAQA,KAAK;MACX,KAAK,GAAG;QACNF,SAAS,CAAEG,UAAU,IAAKC,IAAI,CAACD,UAAU,CAAC,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QACxD;MACF,KAAK,GAAG;QACNL,SAAS,CAAC,GAAG,CAAC;QACd;MACF,KAAK,KAAK;QACRA,SAAS,CAAEG,UAAU,IAAK,CAACG,UAAU,CAACH,UAAU,CAAC,GAAG,CAAC,CAAC,EAAEE,QAAQ,CAAC,CAAC,CAAC;QACnE;MACF,KAAK,GAAG;QACNL,SAAS,CAAEG,UAAU,IAAK,CAACG,UAAU,CAACH,UAAU,CAAC,GAAG,GAAG,EAAEE,QAAQ,CAAC,CAAC,CAAC;QACpE;MACF;QACEL,SAAS,CAAEG,UAAU,IAAMA,UAAU,KAAK,GAAG,GAAGD,KAAK,GAAGC,UAAU,GAAGD,KAAM,CAAC;QAC5E;IACJ;EACF,CAAC;EAED,oBACEN,OAAA;IAAAW,QAAA,gBACEX,OAAA,CAACJ,MAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVf,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAL,QAAA,gBAC3BX,OAAA,CAACF,MAAM;QAACK,MAAM,EAAEA;MAAO;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1Bf,OAAA,CAACH,OAAO;QAACoB,aAAa,EAAEZ;MAAkB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACb,EAAA,CAjCQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}